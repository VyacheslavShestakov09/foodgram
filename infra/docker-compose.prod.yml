version: '3.8'

volumes:
  static:
  media:
  pg_data:

services:
  db:
    image: postgres:14
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    image: ${DOCKER_USERNAME}/foodgram_backend:latest
    env_file: .env
    volumes:
      - static:/app/static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  
  frontend:
    image: ${DOCKER_USERNAME}/foodgram_frontend:latest
    volumes:
      - static:/static
    command: ["sh", "-c", "cp -r /result_build/* /static && mv /static/static/* /static && rm -rf /static/static"
    restart: "no"

  gateway:
    image: ${DOCKER_USERNAME}/foodgram_gateway:latest
    volumes:
      - static:/static
      - media:/media
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/projectfoodgram.ddns.net/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/projectfoodgram.ddns.net/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
